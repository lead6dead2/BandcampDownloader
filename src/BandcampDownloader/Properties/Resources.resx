<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Windows.Forms" name="System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" />
  <data name="ArrowCircle225Left" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ArrowCircle225Left.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="Cloud" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Cloud.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="CloudIco" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\Cloud.ico;System.Drawing.Icon, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="ExclamationSmall" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\ExclamationSmall.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="InformationSmallWhite" type="System.Resources.ResXFileRef, System.Windows.Forms">
    <value>..\Resources\InformationSmallWhite.png;System.Drawing.Bitmap, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a</value>
  </data>
  <data name="buttonBrowse" xml:space="preserve">
    <value>...</value>
  </data>
  <data name="buttonBrowse_ToolTip" xml:space="preserve">
    <value>Browse for folder</value>
  </data>
  <data name="buttonCancel" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="buttonCheckForUpdates" xml:space="preserve">
    <value>Check no_w</value>
  </data>
  <data name="buttonOpenSettingsWindow" xml:space="preserve">
    <value>_Settings</value>
  </data>
  <data name="buttonOpenSettingsWindow_ToolTip" xml:space="preserve">
    <value>Open settings</value>
  </data>
  <data name="buttonResetSettings_ToolTip" xml:space="preserve">
    <value>Resets settings to their default values</value>
  </data>
  <data name="buttonSave" xml:space="preserve">
    <value>_Save</value>
  </data>
  <data name="buttonStart" xml:space="preserve">
    <value>Start _download</value>
  </data>
  <data name="buttonStop" xml:space="preserve">
    <value>_Cancel</value>
  </data>
  <data name="checkBoxCheckForUpdates" xml:space="preserve">
    <value>Check for _updates at startup</value>
  </data>
  <data name="checkBoxCheckForUpdates_ToolTip_Part" xml:space="preserve">
    <value>If checked, the application will query the following address when starting:</value>
  </data>
  <data name="checkBoxCoverArtInFolderConvertToJpg" xml:space="preserve">
    <value>Convert to _jpg</value>
  </data>
  <data name="checkBoxCoverArtInFolderConvertToJpg_ToolTip" xml:space="preserve">
    <value>If checked, the cover art will be converted to jpg with a jpeg compression of 90 (which is an excellent tradeoff between size and perfection).</value>
  </data>
  <data name="checkBoxCoverArtInFolderResize" xml:space="preserve">
    <value>Constrain _maximum width/height</value>
  </data>
  <data name="checkBoxCoverArtInFolderResize_ToolTip" xml:space="preserve">
    <value>If checked, the cover art will be resized with the specified max width/height.</value>
  </data>
  <data name="checkBoxCoverArtInTagsConvertToJpg" xml:space="preserve">
    <value>Convert to jp_g</value>
  </data>
  <data name="checkBoxCoverArtInTagsConvertToJpg_ToolTip" xml:space="preserve">
    <value>If checked, the cover art will be converted to jpg with a jpeg compression of 90 (which is an excellent tradeoff between size and perfection).</value>
  </data>
  <data name="checkBoxCoverArtInTagsResize" xml:space="preserve">
    <value>Constrain m_aximum width/height</value>
  </data>
  <data name="checkBoxCoverArtInTagsResize_ToolTip" xml:space="preserve">
    <value>If checked, the cover art will be resized with the specified max width/height.</value>
  </data>
  <data name="checkBoxDownloadDiscography" xml:space="preserve">
    <value>Download _artist discography</value>
  </data>
  <data name="checkBoxDownloadDiscography_ToolTip" xml:space="preserve">
    <value>If checked, the whole artist discography will be downloaded.</value>
  </data>
  <data name="checkBoxEnableApplicationSounds" xml:space="preserve">
    <value>Play _notifications sounds</value>
  </data>
  <data name="checkBoxEnableApplicationSounds_ToolTip" xml:space="preserve">
    <value>If checked, a notification sound will be played when downloads are finished.</value>
  </data>
  <data name="checkBoxModifyTags" xml:space="preserve">
    <value>_Modify tracks tags (ID3)</value>
  </data>
  <data name="checkBoxModifyTags_ToolTip" xml:space="preserve">
    <value>If checked, each tag will be modified as specified below.

If unchecked, all settings below will be ignored and the tags will be left as they are in the original downloaded file.
This is equivalent to setting "Do not modify" on each tag.</value>
  </data>
  <data name="checkBoxOneAlbumAtATime" xml:space="preserve">
    <value>_Download one album at a time</value>
  </data>
  <data name="checkBoxOneAlbumAtATime_ToolTip" xml:space="preserve">
    <value>If checked, only one album at a time will be downloaded.
If unchecked, all albums will be downloaded at the same time (preferred if you have a high bandwidth).</value>
  </data>
  <data name="checkBoxRetrieveFilesSize" xml:space="preserve">
    <value>Retrieve files _size</value>
  </data>
  <data name="checkBoxRetrieveFilesSize_ToolTip" xml:space="preserve">
    <value>If checked, files size will be retrieved so that precise download progress can be shown.
Uncheck this option to save some time.</value>
  </data>
  <data name="checkBoxSaveCoverArtInFolder" xml:space="preserve">
    <value>Save in _folder</value>
  </data>
  <data name="checkBoxSaveCoverArtInFolder_ToolTip" xml:space="preserve">
    <value>If checked, the cover art will be downloaded in the albums folder.</value>
  </data>
  <data name="checkBoxSaveCoverArtInTags" xml:space="preserve">
    <value>Save in _tags</value>
  </data>
  <data name="checkBoxSaveCoverArtInTags_ToolTip" xml:space="preserve">
    <value>If checked, the cover art will be saved in the tracks tags.</value>
  </data>
  <data name="checkBoxVerboseLog" xml:space="preserve">
    <value>Show _verbose log</value>
  </data>
  <data name="checkBoxVerboseLog_ToolTip" xml:space="preserve">
    <value>If checked, more information will be shown on the log.</value>
  </data>
  <data name="folderBrowserDialogDescription" xml:space="preserve">
    <value>Select the folder to save albums</value>
  </data>
  <data name="labelAlbumArtist" xml:space="preserve">
    <value>Album art_ist</value>
  </data>
  <data name="labelAlbumTitle" xml:space="preserve">
    <value>Album _name</value>
  </data>
  <data name="labelAllowedFileSizeDifference" xml:space="preserve">
    <value>Allowed file _size difference (%)</value>
  </data>
  <data name="labelArtist" xml:space="preserve">
    <value>_Artist</value>
  </data>
  <data name="labelButtonResetSettings" xml:space="preserve">
    <value>_Reset settings</value>
  </data>
  <data name="labelComments" xml:space="preserve">
    <value>Comm_ents</value>
  </data>
  <data name="labelCoverArtFileNameFormat" xml:space="preserve">
    <value>File _name format</value>
  </data>
  <data name="labelCoverArtInFolderMaxSize" xml:space="preserve">
    <value>Max size (_px)</value>
  </data>
  <data name="labelCoverArtInTagsMaxSize" xml:space="preserve">
    <value>Max size (p_x)</value>
  </data>
  <data name="labelDownloadMaxTries" xml:space="preserve">
    <value>Download _max tries</value>
  </data>
  <data name="labelDownloadRetryCooldown" xml:space="preserve">
    <value>Retry c_ooldown (sec)</value>
  </data>
  <data name="labelDownloadRetryExponent" xml:space="preserve">
    <value>Retry _exponent</value>
  </data>
  <data name="labelDownloadsPath" xml:space="preserve">
    <value>Save albums _to</value>
  </data>
  <data name="labelFileNameFormat" xml:space="preserve">
    <value>_File name format:</value>
  </data>
  <data name="labelHttp" xml:space="preserve">
    <value>_HTTP(S) proxy</value>
  </data>
  <data name="labelHttpPort" xml:space="preserve">
    <value>_Port</value>
  </data>
  <data name="labelAdvancedSettingsWarning" xml:space="preserve">
    <value>Change these settings at your own risk.</value>
  </data>
  <data name="labelLanguage" xml:space="preserve">
    <value>_Language</value>
  </data>
  <data name="labelLyrics" xml:space="preserve">
    <value>_Lyrics</value>
  </data>
  <data name="labelSettingsInfo" xml:space="preserve">
    <value>Some settings cannot be changed while tracks are downloading.</value>
  </data>
  <data name="labelTrackNumber" xml:space="preserve">
    <value>Track n_umber</value>
  </data>
  <data name="labelTrackTitle" xml:space="preserve">
    <value>_Title</value>
  </data>
  <data name="labelVerboseLogInfo" xml:space="preserve">
    <value>(the log file is always verbose)</value>
  </data>
  <data name="labelVersion_ToolTip_Part" xml:space="preserve">
    <value>Click to go to official project website:</value>
  </data>
  <data name="labelVersionError" xml:space="preserve">
    <value>Could not check for updates</value>
  </data>
  <data name="labelVersionNewUpdateAvailable" xml:space="preserve">
    <value>A new version ({0}) is available</value>
  </data>
  <data name="labelYear" xml:space="preserve">
    <value>Album release _year</value>
  </data>
  <data name="listBoxItemAdvanced" xml:space="preserve">
    <value>Advanced settings</value>
  </data>
  <data name="listBoxItemCoverArt" xml:space="preserve">
    <value>Cover art</value>
  </data>
  <data name="listBoxItemDownloads" xml:space="preserve">
    <value>Downloads</value>
  </data>
  <data name="listBoxItemGeneral" xml:space="preserve">
    <value>General</value>
  </data>
  <data name="listBoxItemNetwork" xml:space="preserve">
    <value>Network</value>
  </data>
  <data name="listBoxItemTags" xml:space="preserve">
    <value>Naming and tags</value>
  </data>
  <data name="messageBoxButtonCancel" xml:space="preserve">
    <value>&amp;Cancel</value>
  </data>
  <data name="messageBoxButtonNo" xml:space="preserve">
    <value>&amp;No</value>
  </data>
  <data name="messageBoxButtonOK" xml:space="preserve">
    <value>&amp;OK</value>
  </data>
  <data name="messageBoxButtonYes" xml:space="preserve">
    <value>&amp;Yes</value>
  </data>
  <data name="messageBoxCancelDownloads" xml:space="preserve">
    <value>Would you like to cancel all downloads?</value>
  </data>
  <data name="messageBoxCheckForUpdatesError" xml:space="preserve">
    <value>An error occured while checking for updates. Please retry later.</value>
  </data>
  <data name="messageBoxCloseWindowWhenDownloading" xml:space="preserve">
    <value>There are currently active downloads. Are you sure you want to close the application and stop all downloads?</value>
  </data>
  <data name="messageBoxNoUpdateAvailable" xml:space="preserve">
    <value>You already have the latest version available ({0}).</value>
  </data>
  <data name="messageBoxResetSettings" xml:space="preserve">
    <value>Reset all settings to their default values?</value>
  </data>
  <data name="messageBoxUpdateAvailable" xml:space="preserve">
    <value>A new version is available:
Current version = {0}
Latest version = {1}

Would you like to go to the project website in order to download the latest version?</value>
  </data>
  <data name="radioButtonManualProxy" xml:space="preserve">
    <value>_Manual proxy configuration</value>
  </data>
  <data name="radioButtonNoProxy" xml:space="preserve">
    <value>_No proxy</value>
  </data>
  <data name="radioButtonSystemProxy" xml:space="preserve">
    <value>_System proxy</value>
  </data>
  <data name="textBlockTranslationHelp" xml:space="preserve">
    <value>Help translate</value>
  </data>
  <data name="textBoxAllowedFileSizeDifference_ToolTip" xml:space="preserve">
    <value>When downloading a track, if the same file (name) already exists, it will be checked against the track to download.
If the size of both files differ from less than this value (in percent), the track download will be skipped.

Recommended value = 5</value>
  </data>
  <data name="textBoxCoverArtFileNameFormat_ToolTip" xml:space="preserve">
    <value>You can use placeholders to customize the file name:
- {artist} will be replaced by the album artist
- {album} will be replaced by the album name
- {year}, {month} and {day} will be replaced by the album release date</value>
  </data>
  <data name="textBoxDownloadMaxTries_ToolTip" xml:space="preserve">
    <value>Maximum number of tries performed to download a track if it fails.
After that number is reached (for each track), the track download will be skipped.

Recommended value = 7</value>
  </data>
  <data name="textBoxDownloadRetryCooldown_ToolTip" xml:space="preserve">
    <value>Used to control the exponential back-off mechanism.
After each failure of a track download, BandcampDownloader can wait for a specific time before trying again
to download the track in order to avoid tickling the Bandcamp anti-spam filter.
The formula used to compute the time to wait before trying again a download is the following:
time = cooldown * (exponent ^ try-count)

Recommended value = 0.2</value>
  </data>
  <data name="textBoxDownloadRetryExponent_ToolTip" xml:space="preserve">
    <value>Used to control the exponential back-off mechanism.
After each failure of a track download, BandcampDownloader can wait for a specific time before trying again 
to download the track in order to avoid tickling the Bandcamp anti-spam filter.
The formula used to compute the time to wait before trying again a download is the following:
time = cooldown * (exponent ^ try-count)

Recommended value = 4</value>
  </data>
  <data name="textBoxDownloadsPath_ToolTip" xml:space="preserve">
    <value>You can use placeholders to customize the download folder depending on the album:
- {artist} will be replaced by the album artist
- {album} will be replaced by the album name
- {year}, {month} and {day} will be replaced by the album release date</value>
  </data>
  <data name="textBoxFileNameFormat_ToolTip" xml:space="preserve">
    <value>You can use placeholders to customize the file name:
- {artist} will be replaced by the album artist
- {title} will be replaced by the track name
- {tracknum} will be replaced by the track number
- {album} will be replaced by the album name
- {year}, {month} and {day} will be replaced by the album release date</value>
  </data>
  <data name="textBoxUrlsPlaceholder" xml:space="preserve">
    <value>Paste URLs of albums to download here. You can specify multiple URLs by writing one URL per line.

A Bandcamp URL looks like: http://[artist].bandcamp.com/album/[album] or http://[artist].bandcamp.com/track/[track]
Paste artist pages: http://[artist].bandcamp.com and check "☑ Download artist discography" to download all their albums.</value>
  </data>
  <data name="windowSettings_Title" xml:space="preserve">
    <value>Settings</value>
  </data>
  <data name="TagRemoveAction_DoNotModify" xml:space="preserve">
    <value>Don't modify the tag</value>
  </data>
  <data name="TagRemoveAction_Empty" xml:space="preserve">
    <value>Empty the tag</value>
  </data>
</root>